

### Main Requirements

1. 
2. 
3. ]
4. 
5. 
6. 

	7.1. 
	


8. 
9. 
10. 
11. 
12. 
13. 

### Bonus Requirements

1. Your Readme file for the client-side repo should have details about your project's features and functionalities in bullet points(at least five bullet points) and your live link. Adding a meaningful readme file for the server-side repo is optional.
2.
3. 

1. The **title of the page** will change with the page you visit. It should not be the same for every route
2. 
3. 
4. 
5. Implement the basic version of the **JWT**  **token** for email/password-based authentication. Upon login, you will create a jwt token and store it on the client side, and for the "My reviews" page, you will send the token and verify the user. Implementing 401 and 403 is optional. 
6. In the "My reviews" page, clicking the **edit review** button/icon shows that review in a modal/in a new route and lets the user update it.
7.  **Simple challenge** In the service details page, **sort the reviews in a descending order** by inserting time(you have to keep the inserting time when you add a review, you can do it with the Date object, or you can explore MongoDB documentation). You will have to implement this code on the server side.

### Optional
1. Use pagination on the services page.
3. 
4. 2. Try to use a better-looking confirmation dialogue other than the browser's default confirm.
3. On the `add a service` page, try to implement direct image upload from your computer. This image can be hosted on a third party image hosting like imgbb or directly to mongodb
4. Add some animation while applicable.
5. Please Use icons whenever applicable and use fonts (google fonts)
6. Make the footer a little more realistic with the copyright symbol and year.
7. Optimize your images
8. Add something extra of your own. This will help you in the future.

